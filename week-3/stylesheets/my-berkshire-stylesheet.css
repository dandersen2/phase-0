/*

  1. What is important to know when linking an external file (like a
    stylesheet) to an HTML file?

      When linking an external stylesheet it is important to double check the location of the file relative to your html file to make sure that the browser can locate it.
      Without the proper link tag and the correct relative address, none of your styling will appear and the site will only display the html content.

	   Here is an example of a link with the correct syntax for a stylesheet that is
	   located one directory up, then within another directory called css, as long as the
	   actual stylesheet name is "stylesheet.css:
	   <link rel="stylesheet" type="text/css" href="../css/stylesheet.css">


  2. What tricks did you use to help you with positioning? How hard
    was it to get the site as you wanted it?

      Some tricks that were helpful for positioning the elements of our site in this
      assignment were display, float, width, and margin properties. Changing the display
      from block, to inline, to inline-block makes a huge difference in how the page
      appears on the screen. Block will give each new div or html tag a new line of its
      own. The inline-block property will allow the different tags to fall "inline"
      next to eachother horizontally. Width and height attributes are fairly self-
      explanatory but are very useful in achieving your desired box sizes. Margins,
      padding, and borders are similar but distinct attributes that create space
      outside of a div, inside of a div, or directly around a div(like a picture frame)
      accordingly. Float allows you to place a piece of content to the right or left
      side of the screen. This can also be achieved using the "right:" or "left:"
      properties and setting the space to the right or left of a div to 0. As I am
      beginning to realize, there are often many different ways to achieve the same
      result in CSS but theres usually one way that will be the most efficient in the
      long run and cause the least amount of interference with other style properties
      as you add them later. Using relative properties such as percentages instead of
      fixed measurements such as px or em seems to be the better practice most of the
      time because these properties will automatically adjust if another div is added
      or if the viewer is using a smaller screen such as a phone or tablet.

  3. What CSS did you use to modify the element style (like size, color, etc.)

      For this particular page we used the following style attributes:
	    background-color; color; text-align; font-variant; font-size;
	    font-weight; border-top; border-left; border-right; border-bottom; border-color;
	    border-style; float; width; padding-bottom; font-size; padding-top; margin-top;
	    & display. text-align, font-variant, and font-weight.

  4. Did you modify the HTML to include classes or ids? If so, which did you
    chose and why? If you didn't, how would you know which one to add to your HTML?
    When you compared your site to the actual code base, which do you think had
    cleaner code that followed best practices and why?

      We did modify the html to include classes so that our css styling could be applied
      to multiple different elements with the same code. Classes seemed to be a better
      choice in this instance and in most cases where there are multiple elements that
      have the same styling because ID's can only be used for a single instance, making
      your CSS sheet more cluttered and less reusable.

  5. When you compared your site to the actual code base, which do you think had cleaner
    code that followed best practices and why?

      When we compared our code to that of the actual Berkshire Hathaway site, I noticed
      a few differences, including that thye used a table in their html in order to create
      the links which may have been an easier way to achieve the vertical alignment than
      what we used, which was mostly trial and error. Their site's use of complicated
      margins around each element seemed to be very hectic and less clean than the way that
      we achieved the same effect. I'm not entirely sure what the web-kit properties do yet
      but I think they may have used a program to create the css such as wordpress. I would
      say that to truly use the best practices possible for this site, some combination of
      our own code and the original's would be needed.

*/


body {
	background-color: #ffffff;
	color: #000080;
}

.text-centered {
	text-align: center;
}

header > div > h1 {
	font-variant:small-caps;
}

header > div > h1 > span {
	font-size: 1rem;
}

header > div > p {
	font-weight: bold;
	font-size: .8rem;
}

header > div > p > span:last-child {
	font-size: 1rem;
}

.border-style {
	border-top: 1px;
	border-left: 0px;
	border-right: 0px;
	border-bottom: 0px;
	border-color: gray;
	border-style: solid;
}

a {
	color: #800080;
}

a:visited {
	color: #ff0000;
}

.column1 {
	float: left;
	width: 50%;
}

.column2 {
	float: right;
	width: 50%;
}

li {
	padding-bottom: 7%;
}

.description-text {
	font-size: .60em;
	padding-top: .5%;
	margin-top: .5%;
}

.geico-font {
	font-size: .60rem;
}

.feedback-font {
	font-size: .8rem;
}

footer {
	display: inline-block;
}

.separate-line {
	display: block;
}